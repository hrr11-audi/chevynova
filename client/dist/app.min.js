angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){
console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),
c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){
var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){
a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"
}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={
name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",
controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){
a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,
checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),
e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data;
})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){
a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",
data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)});
},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){
b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){
return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({
method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),
b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){
c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){
c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",
url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{
url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){
var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",
data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",
templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){
var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){
return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){
return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){
a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){
console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){
a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,
checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){
a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,
signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");
return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,
a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){
b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,
getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({
method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}});