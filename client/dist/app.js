angular.module('nova', [
  'nova.auth',
  'nova.services',
  'ui.router',
  'nova.main',
  'nova.update',
  'nova.notifications',
  'firebase'
])

.config(function($stateProvider, $urlRouterProvider, $httpProvider){
  $urlRouterProvider.otherwise("/signin");
  $stateProvider
    .state('main', {
      url: "/main",
      templateUrl: "app/main/main.html",
      controller: "MainController"
    })
    .state('signin', {
      url: "/signin",
      templateUrl: "app/auth/signin.html",
      controller: "AuthController"
    })
    .state('signup', {
      url: "/signup",
      templateUrl: "app/auth/signup.html",
      controller: "AuthController"
    })
    .state('update', {
      url: "/update",
      templateUrl: "app/update/update.html",
      controller: "UpdateController"
    })
    .state('logout', {
      url: "/logout",
      controller: function($scope, Auth){
        Auth.signout();
      }
    })
    .state('notifications', {
      url: "/notifications",
      templateUrl: "app/notifications/notifications.html",
      controller: "NotificationCtrl"
    });

    $httpProvider.interceptors.push('AttachTokens');
})

.factory('AttachTokens', function($window){
  var attach = {
    request: function(object) {
      var jwt = $window.localStorage.getItem('com.nova');
      if (jwt) {
        object.headers['x-access-token'] = jwt;
      }
      object.headers['Allow-Control-Allow-Origin'] = '*';
      return object;
    }
  };
  return attach;
})

.run(function($rootScope, $state, Auth) {
  $rootScope.$on('$stateChangeStart', function(evt, toState, toParams, fromState, fromParams){
    if (toState.name === 'signin') {
      return;
    }
    if (!Auth.isAuth() && toState.name !== 'signup'){
      evt.preventDefault();
      $state.go('signin');
    }
  });
});

angular.module('nova.auth', [])

.controller('AuthController', function ($scope, $rootScope, $window, $state, Auth, Notify) {
  $scope.user = {};
  $rootScope.unread = $rootScope.unread || 0;

  if (Auth.isAuth()) {
    $rootScope.hasAuth = true;
  }

  $scope.signin = function () {
    Auth.signin($scope.user)
      .then(function (token) {
        $window.localStorage.setItem('com.nova', token);
        $rootScope.hasAuth = true;
        $state.go('main');
        // $scope.checkNotifications();
      })
      .catch(function (error) {
        console.error(error);
      });
  };

  $scope.signup = function () {
    Auth.signup($scope.user)
      .then(function (token) {
        $window.localStorage.setItem('com.nova', token);
        $rootScope.hasAuth = true;
        $state.go('update');
      })
      .catch(function (error) {
        console.error(error);
      });
  };

  $scope.checkNotifications = function() {
    if ($rootScope.hasAuth && $state.name !== 'notifications') {
      Notify.checkNotifications().then(function(resp) {
        $rootScope.unread = resp || 0;
      });
    }
  };

  // $scope.checkNotifications();
});

angular.module('nova.main', [])

.controller('MainController', function($scope, $rootScope, Climbers, Notify, Auth, $firebaseObject){
  // var param = '-K82b6x8j9uXqIclfUel';
  // var FIREBASE = new Firebase('https://on-belay.firebaseio.com/' + param);

  // var conversations = $firebaseObject(FIREBASE);

  // conversations.$bindTo($scope, 'data');

  $scope.activeClimbers = [];
  $scope.status = false;

  $scope.getActiveClimbers = function(){
    Climbers.getClimbers()
      .then(function(res) {
        $scope.activeClimbers = res;
      })
      .catch(function(err) {
        console.error(err);
      });
  }();

  $scope.getStatus = function() {
    Climbers.getStatus().then(function(res) {
      $scope.status = res.status;
    });
  }();

  $scope.updateStatus = function() {
    Climbers.updateStatus().then(function(res) {
      console.log(res);
    });
  };

  $scope.climbOn = function(climber) {
    Notify.sendNotification(climber)
      .then(function(res) {
        console.log(res);
      })
      .catch(function(err) {
        console.error(err);
      });
  };
  //Testing, delete later
  $scope.contactMe = function(id) {
  var param = $rootScope.loggedInID + '-' + id;
  var conversations = new Firebase('https://on-belay-1.firebaseio.com/' + param);

  var cons = $firebaseObject(conversations);

  cons.$bindTo($scope, 'data');

  conversations.push(
    { wasRead: false,
        users: { sender: 'Delphine', recipient: 'Sean' },
        text: 'Octopus'
    }
  );
/*
      { wasRead: false,
        users: { sender: 'Delphine', recipient: 'Santosh' },
        text: 'Starfish'
      }*/
  };

});

angular.module('nova.notifications', [])

  .controller('NotificationCtrl', function($scope, Notify, Climbers) {
    $scope.notifications = [];


    /*$scope.getAllNotifications = function() {
      Notify.fetchAllNotifications()
        .then(function(res) {
          $scope.notifications = res;
        })
        .catch(function(err) {
          console.error(err);
        });
    }();

    $scope.readAllNotifications = function() {
      Notify.markAllNotificationsRead()
        .then(function(res) {
          console.log(res);
        })
        .catch(function(err) {
          console.error(err);
        });
    }();*/

    $scope.climbOn = function(climber) {
      Notify.replyToClimber(climber)
        .then(function(res) {
          console.log(res);
          // Turn flags off for both users
          Climbers.updateStatus(climber)
            .then(function(res) {
              console.log(res);
            })
            .catch(function(err) {
              console.error(err);
            });
        })
        .catch(function(err) {
          console.error(err);
        });
    };

  });

angular.module('nova.update', [])

.controller('UpdateController', function($scope, $state, Update){
  $scope.user = { name: {first: '', last: ''} };
  $scope.update = function(){
    Update.update($scope.user)
    .then(function (res) {
        $state.go('main');
      })
      .catch(function (error) {
        console.error(error);
      });
  };
});

angular.module('nova', [
  'nova.auth',
  'nova.services',
  'ui.router',
  'nova.main',
  'nova.update',
  'nova.notifications',
  'firebase'
])

.config(function($stateProvider, $urlRouterProvider, $httpProvider){
  $urlRouterProvider.otherwise("/signin");
  $stateProvider
    .state('main', {
      url: "/main",
      templateUrl: "app/main/main.html",
      controller: "MainController"
    })
    .state('signin', {
      url: "/signin",
      templateUrl: "app/auth/signin.html",
      controller: "AuthController"
    })
    .state('signup', {
      url: "/signup",
      templateUrl: "app/auth/signup.html",
      controller: "AuthController"
    })
    .state('update', {
      url: "/update",
      templateUrl: "app/update/update.html",
      controller: "UpdateController"
    })
    .state('logout', {
      url: "/logout",
      controller: function($scope, Auth){
        Auth.signout();
      }
    })
    .state('notifications', {
      url: "/notifications",
      templateUrl: "app/notifications/notifications.html",
      controller: "NotificationCtrl"
    });

    $httpProvider.interceptors.push('AttachTokens');
})

.factory('AttachTokens', function($window){
  var attach = {
    request: function(object) {
      var jwt = $window.localStorage.getItem('com.nova');
      if (jwt) {
        object.headers['x-access-token'] = jwt;
      }
      object.headers['Allow-Control-Allow-Origin'] = '*';
      return object;
    }
  };
  return attach;
})

.run(function($rootScope, $state, Auth) {
  $rootScope.$on('$stateChangeStart', function(evt, toState, toParams, fromState, fromParams){
    if (toState.name === 'signin') {
      return;
    }
    if (!Auth.isAuth() && toState.name !== 'signup'){
      evt.preventDefault();
      $state.go('signin');
    }
  });
});

angular.module('nova.auth', [])

.controller('AuthController', function ($scope, $rootScope, $window, $state, Auth, Notify) {
  $scope.user = {};
  $rootScope.unread = $rootScope.unread || 0;

  if (Auth.isAuth()) {
    $rootScope.hasAuth = true;
  }

  $scope.signin = function () {
    Auth.signin($scope.user)
      .then(function (token) {
        $window.localStorage.setItem('com.nova', token);
        $rootScope.hasAuth = true;
        $state.go('main');
        // $scope.checkNotifications();
      })
      .catch(function (error) {
        console.error(error);
      });
  };

  $scope.signup = function () {
    Auth.signup($scope.user)
      .then(function (token) {
        $window.localStorage.setItem('com.nova', token);
        $rootScope.hasAuth = true;
        $state.go('update');
      })
      .catch(function (error) {
        console.error(error);
      });
  };

  $scope.checkNotifications = function() {
    if ($rootScope.hasAuth && $state.name !== 'notifications') {
      Notify.checkNotifications().then(function(resp) {
        $rootScope.unread = resp || 0;
      });
    }
  };

  // $scope.checkNotifications();
});

angular.module('nova.main', [])

.controller('MainController', function($scope, $rootScope, Climbers, Notify, Auth, $firebaseObject){
  // var param = '-K82b6x8j9uXqIclfUel';
  // var FIREBASE = new Firebase('https://on-belay.firebaseio.com/' + param);

  // var conversations = $firebaseObject(FIREBASE);

  // conversations.$bindTo($scope, 'data');

  $scope.activeClimbers = [];
  $scope.status = false;

  $scope.getActiveClimbers = function(){
    Climbers.getClimbers()
      .then(function(res) {
        $scope.activeClimbers = res;
      })
      .catch(function(err) {
        console.error(err);
      });
  }();

  $scope.getStatus = function() {
    Climbers.getStatus().then(function(res) {
      $scope.status = res.status;
    });
  }();

  $scope.updateStatus = function() {
    Climbers.updateStatus().then(function(res) {
      console.log(res);
    });
  };

  $scope.climbOn = function(climber) {
    Notify.sendNotification(climber)
      .then(function(res) {
        console.log(res);
      })
      .catch(function(err) {
        console.error(err);
      });
  };
  //Testing, delete later
  $scope.contactMe = function(id) {
  var param = $rootScope.loggedInID + '-' + id;
  var conversations = new Firebase('https://on-belay-1.firebaseio.com/' + param);

  var cons = $firebaseObject(conversations);

  cons.$bindTo($scope, 'data');

  conversations.push(
    { wasRead: false,
        users: { sender: 'Delphine', recipient: 'Sean' },
        text: 'Octopus'
    }
  );
/*
      { wasRead: false,
        users: { sender: 'Delphine', recipient: 'Santosh' },
        text: 'Starfish'
      }*/
  };

});

angular.module('nova.notifications', [])

  .controller('NotificationCtrl', function($scope, Notify, Climbers) {
    $scope.notifications = [];


    /*$scope.getAllNotifications = function() {
      Notify.fetchAllNotifications()
        .then(function(res) {
          $scope.notifications = res;
        })
        .catch(function(err) {
          console.error(err);
        });
    }();

    $scope.readAllNotifications = function() {
      Notify.markAllNotificationsRead()
        .then(function(res) {
          console.log(res);
        })
        .catch(function(err) {
          console.error(err);
        });
    }();*/

    $scope.climbOn = function(climber) {
      Notify.replyToClimber(climber)
        .then(function(res) {
          console.log(res);
          // Turn flags off for both users
          Climbers.updateStatus(climber)
            .then(function(res) {
              console.log(res);
            })
            .catch(function(err) {
              console.error(err);
            });
        })
        .catch(function(err) {
          console.error(err);
        });
    };

  });

angular.module('nova.update', [])

.controller('UpdateController', function($scope, $state, Update){
  $scope.user = { name: {first: '', last: ''} };
  $scope.update = function(){
    Update.update($scope.user)
    .then(function (res) {
        $state.go('main');
      })
      .catch(function (error) {
        console.error(error);
      });
  };
});

angular.module('nova', [
  'nova.auth',
  'nova.services',
  'ui.router',
  'nova.main',
  'nova.update',
  'nova.notifications',
  'firebase'
])

.config(function($stateProvider, $urlRouterProvider, $httpProvider){
  $urlRouterProvider.otherwise("/signin");
  $stateProvider
    .state('main', {
      url: "/main",
      templateUrl: "app/main/main.html",
      controller: "MainController"
    })
    .state('signin', {
      url: "/signin",
      templateUrl: "app/auth/signin.html",
      controller: "AuthController"
    })
    .state('signup', {
      url: "/signup",
      templateUrl: "app/auth/signup.html",
      controller: "AuthController"
    })
    .state('update', {
      url: "/update",
      templateUrl: "app/update/update.html",
      controller: "UpdateController"
    })
    .state('logout', {
      url: "/logout",
      controller: function($scope, Auth){
        Auth.signout();
      }
    })
    .state('notifications', {
      url: "/notifications",
      templateUrl: "app/notifications/notifications.html",
      controller: "NotificationCtrl"
    });

    $httpProvider.interceptors.push('AttachTokens');
})

.factory('AttachTokens', function($window){
  var attach = {
    request: function(object) {
      var jwt = $window.localStorage.getItem('com.nova');
      if (jwt) {
        object.headers['x-access-token'] = jwt;
      }
      object.headers['Allow-Control-Allow-Origin'] = '*';
      return object;
    }
  };
  return attach;
})

.run(function($rootScope, $state, Auth) {
  $rootScope.$on('$stateChangeStart', function(evt, toState, toParams, fromState, fromParams){
    if (toState.name === 'signin') {
      return;
    }
    if (!Auth.isAuth() && toState.name !== 'signup'){
      evt.preventDefault();
      $state.go('signin');
    }
  });
});

angular.module('nova.auth', [])

.controller('AuthController', function ($scope, $rootScope, $window, $state, Auth, Notify) {
  $scope.user = {};
  $rootScope.unread = $rootScope.unread || 0;

  if (Auth.isAuth()) {
    $rootScope.hasAuth = true;
  }

  $scope.signin = function () {
    Auth.signin($scope.user)
      .then(function (token) {
        $window.localStorage.setItem('com.nova', token);
        $rootScope.hasAuth = true;
        $state.go('main');
        // $scope.checkNotifications();
      })
      .catch(function (error) {
        console.error(error);
      });
  };

  $scope.signup = function () {
    Auth.signup($scope.user)
      .then(function (token) {
        $window.localStorage.setItem('com.nova', token);
        $rootScope.hasAuth = true;
        $state.go('update');
      })
      .catch(function (error) {
        console.error(error);
      });
  };

  $scope.checkNotifications = function() {
    if ($rootScope.hasAuth && $state.name !== 'notifications') {
      Notify.checkNotifications().then(function(resp) {
        $rootScope.unread = resp || 0;
      });
    }
  };

  // $scope.checkNotifications();
});

angular.module('nova.main', [])

.controller('MainController', function($scope, $rootScope, Climbers, Notify, Auth, $firebaseObject){
  // var param = '-K82b6x8j9uXqIclfUel';
  // var FIREBASE = new Firebase('https://on-belay.firebaseio.com/' + param);

  // var conversations = $firebaseObject(FIREBASE);

  // conversations.$bindTo($scope, 'data');

  $scope.activeClimbers = [];
  $scope.status = false;

  $scope.getActiveClimbers = function(){
    Climbers.getClimbers()
      .then(function(res) {
        $scope.activeClimbers = res;
      })
      .catch(function(err) {
        console.error(err);
      });
  }();

  $scope.getStatus = function() {
    Climbers.getStatus().then(function(res) {
      $scope.status = res.status;
    });
  }();

  $scope.updateStatus = function() {
    Climbers.updateStatus().then(function(res) {
      console.log(res);
    });
  };

  $scope.climbOn = function(climber) {
    Notify.sendNotification(climber)
      .then(function(res) {
        console.log(res);
      })
      .catch(function(err) {
        console.error(err);
      });
  };
  //Testing, delete later
  $scope.contactMe = function(id) {
  var param = $rootScope.loggedInID + '-' + id;
  var conversations = new Firebase('https://on-belay-1.firebaseio.com/' + param);

  var cons = $firebaseObject(conversations);

  cons.$bindTo($scope, 'data');

  conversations.push(
    { wasRead: false,
        users: { sender: 'Delphine', recipient: 'Sean' },
        text: 'Octopus'
    }
  );
/*
      { wasRead: false,
        users: { sender: 'Delphine', recipient: 'Santosh' },
        text: 'Starfish'
      }*/
  };

});

angular.module('nova.notifications', [])

  .controller('NotificationCtrl', function($scope, Notify, Climbers) {
    $scope.notifications = [];


    /*$scope.getAllNotifications = function() {
      Notify.fetchAllNotifications()
        .then(function(res) {
          $scope.notifications = res;
        })
        .catch(function(err) {
          console.error(err);
        });
    }();

    $scope.readAllNotifications = function() {
      Notify.markAllNotificationsRead()
        .then(function(res) {
          console.log(res);
        })
        .catch(function(err) {
          console.error(err);
        });
    }();*/

    $scope.climbOn = function(climber) {
      Notify.replyToClimber(climber)
        .then(function(res) {
          console.log(res);
          // Turn flags off for both users
          Climbers.updateStatus(climber)
            .then(function(res) {
              console.log(res);
            })
            .catch(function(err) {
              console.error(err);
            });
        })
        .catch(function(err) {
          console.error(err);
        });
    };

  });

angular.module('nova.update', [])

.controller('UpdateController', function($scope, $state, Update){
  $scope.user = { name: {first: '', last: ''} };
  $scope.update = function(){
    Update.update($scope.user)
    .then(function (res) {
        $state.go('main');
      })
      .catch(function (error) {
        console.error(error);
      });
  };
});

angular.module('nova', [
  'nova.auth',
  'nova.services',
  'ui.router',
  'nova.main',
  'nova.update',
  'nova.notifications',
  'firebase'
])

.config(function($stateProvider, $urlRouterProvider, $httpProvider){
  $urlRouterProvider.otherwise("/signin");
  $stateProvider
    .state('main', {
      url: "/main",
      templateUrl: "app/main/main.html",
      controller: "MainController"
    })
    .state('signin', {
      url: "/signin",
      templateUrl: "app/auth/signin.html",
      controller: "AuthController"
    })
    .state('signup', {
      url: "/signup",
      templateUrl: "app/auth/signup.html",
      controller: "AuthController"
    })
    .state('update', {
      url: "/update",
      templateUrl: "app/update/update.html",
      controller: "UpdateController"
    })
    .state('logout', {
      url: "/logout",
      controller: function($scope, Auth){
        Auth.signout();
      }
    })
    .state('notifications', {
      url: "/notifications",
      templateUrl: "app/notifications/notifications.html",
      controller: "NotificationCtrl"
    });

    $httpProvider.interceptors.push('AttachTokens');
})

.factory('AttachTokens', function($window){
  var attach = {
    request: function(object) {
      var jwt = $window.localStorage.getItem('com.nova');
      if (jwt) {
        object.headers['x-access-token'] = jwt;
      }
      object.headers['Allow-Control-Allow-Origin'] = '*';
      return object;
    }
  };
  return attach;
})

.run(function($rootScope, $state, Auth) {
  $rootScope.$on('$stateChangeStart', function(evt, toState, toParams, fromState, fromParams){
    if (toState.name === 'signin') {
      return;
    }
    if (!Auth.isAuth() && toState.name !== 'signup'){
      evt.preventDefault();
      $state.go('signin');
    }
  });
});

angular.module('nova.auth', [])

.controller('AuthController', function ($scope, $rootScope, $window, $state, Auth, Notify) {
  $scope.user = {};
  $rootScope.unread = $rootScope.unread || 0;

  if (Auth.isAuth()) {
    $rootScope.hasAuth = true;
  }

  $scope.signin = function () {
    Auth.signin($scope.user)
      .then(function (token) {
        $window.localStorage.setItem('com.nova', token);
        $rootScope.hasAuth = true;
        $state.go('main');
        // $scope.checkNotifications();
      })
      .catch(function (error) {
        console.error(error);
      });
  };

  $scope.signup = function () {
    Auth.signup($scope.user)
      .then(function (token) {
        $window.localStorage.setItem('com.nova', token);
        $rootScope.hasAuth = true;
        $state.go('update');
      })
      .catch(function (error) {
        console.error(error);
      });
  };

  $scope.checkNotifications = function() {
    if ($rootScope.hasAuth && $state.name !== 'notifications') {
      Notify.checkNotifications().then(function(resp) {
        $rootScope.unread = resp || 0;
      });
    }
  };

  // $scope.checkNotifications();
});

angular.module('nova.main', [])

.controller('MainController', function($scope, $rootScope, Climbers, Notify, Auth, $firebaseObject){
  // var param = '-K82b6x8j9uXqIclfUel';
  // var FIREBASE = new Firebase('https://on-belay.firebaseio.com/' + param);

  // var conversations = $firebaseObject(FIREBASE);

  // conversations.$bindTo($scope, 'data');

  $scope.activeClimbers = [];
  $scope.status = false;

  $scope.getActiveClimbers = function(){
    Climbers.getClimbers()
      .then(function(res) {
        $scope.activeClimbers = res;
      })
      .catch(function(err) {
        console.error(err);
      });
  }();

  $scope.getStatus = function() {
    Climbers.getStatus().then(function(res) {
      $scope.status = res.status;
    });
  }();

  $scope.updateStatus = function() {
    Climbers.updateStatus().then(function(res) {
      console.log(res);
    });
  };

  $scope.climbOn = function(climber) {
    Notify.sendNotification(climber)
      .then(function(res) {
        console.log(res);
      })
      .catch(function(err) {
        console.error(err);
      });
  };
  //Testing, delete later
  $scope.contactMe = function(id) {
  var param = $rootScope.loggedInID + '-' + id;
  var conversations = new Firebase('https://on-belay.firebaseio.com/' + param);

  var cons = $firebaseObject(conversations);

  cons.$bindTo($scope, 'data');

  conversations.push(
    { wasRead: false,
        users: { sender: 'Delphine', recipient: 'Sean' },
        text: 'Octopus'
    }
  );
/*
      { wasRead: false,
        users: { sender: 'Delphine', recipient: 'Santosh' },
        text: 'Starfish'
      }*/
  };

});

angular.module('nova.notifications', [])

  .controller('NotificationCtrl', function($scope, Notify, Climbers) {
    $scope.notifications = [];


    /*$scope.getAllNotifications = function() {
      Notify.fetchAllNotifications()
        .then(function(res) {
          $scope.notifications = res;
        })
        .catch(function(err) {
          console.error(err);
        });
    }();

    $scope.readAllNotifications = function() {
      Notify.markAllNotificationsRead()
        .then(function(res) {
          console.log(res);
        })
        .catch(function(err) {
          console.error(err);
        });
    }();*/

    $scope.climbOn = function(climber) {
      Notify.replyToClimber(climber)
        .then(function(res) {
          console.log(res);
          // Turn flags off for both users
          Climbers.updateStatus(climber)
            .then(function(res) {
              console.log(res);
            })
            .catch(function(err) {
              console.error(err);
            });
        })
        .catch(function(err) {
          console.error(err);
        });
    };

  });

angular.module('nova.update', [])

.controller('UpdateController', function($scope, $state, Update){
  $scope.user = { name: {first: '', last: ''} };
  $scope.update = function(){
    Update.update($scope.user)
    .then(function (res) {
        $state.go('main');
      })
      .catch(function (error) {
        console.error(error);
      });
  };
});

angular.module('nova', [
  'nova.auth',
  'nova.services',
  'ui.router',
  'nova.main',
  'nova.update',
  'nova.notifications',
  'firebase'
])

.config(function($stateProvider, $urlRouterProvider, $httpProvider){
  $urlRouterProvider.otherwise("/signin");
  $stateProvider
    .state('main', {
      url: "/main",
      templateUrl: "app/main/main.html",
      controller: "MainController"
    })
    .state('signin', {
      url: "/signin",
      templateUrl: "app/auth/signin.html",
      controller: "AuthController"
    })
    .state('signup', {
      url: "/signup",
      templateUrl: "app/auth/signup.html",
      controller: "AuthController"
    })
    .state('update', {
      url: "/update",
      templateUrl: "app/update/update.html",
      controller: "UpdateController"
    })
    .state('logout', {
      url: "/logout",
      controller: function($scope, Auth){
        Auth.signout();
      }
    })
    .state('notifications', {
      url: "/notifications",
      templateUrl: "app/notifications/notifications.html",
      controller: "NotificationCtrl"
    });

    $httpProvider.interceptors.push('AttachTokens');
})

.factory('AttachTokens', function($window){
  var attach = {
    request: function(object) {
      var jwt = $window.localStorage.getItem('com.nova');
      if (jwt) {
        object.headers['x-access-token'] = jwt;
      }
      object.headers['Allow-Control-Allow-Origin'] = '*';
      return object;
    }
  };
  return attach;
})

.run(function($rootScope, $state, Auth) {
  $rootScope.$on('$stateChangeStart', function(evt, toState, toParams, fromState, fromParams){
    if (toState.name === 'signin') {
      return;
    }
    if (!Auth.isAuth() && toState.name !== 'signup'){
      evt.preventDefault();
      $state.go('signin');
    }
  });
});

angular.module('nova.auth', [])

.controller('AuthController', function ($scope, $rootScope, $window, $state, Auth, Notify) {
  $scope.user = {};
  $rootScope.unread = $rootScope.unread || 0;

  if (Auth.isAuth()) {
    $rootScope.hasAuth = true;
  }

  $scope.signin = function () {
    Auth.signin($scope.user)
      .then(function (token) {
        $window.localStorage.setItem('com.nova', token);
        $rootScope.hasAuth = true;
        $state.go('main');
        // $scope.checkNotifications();
      })
      .catch(function (error) {
        console.error(error);
      });
  };

  $scope.signup = function () {
    Auth.signup($scope.user)
      .then(function (token) {
        $window.localStorage.setItem('com.nova', token);
        $rootScope.hasAuth = true;
        $state.go('update');
      })
      .catch(function (error) {
        console.error(error);
      });
  };

  $scope.checkNotifications = function() {
    if ($rootScope.hasAuth && $state.name !== 'notifications') {
      Notify.checkNotifications().then(function(resp) {
        $rootScope.unread = resp || 0;
      });
    }
  };

  // $scope.checkNotifications();
});

angular.module('nova.main', [])

.controller('MainController', function($scope, $rootScope, Climbers, Notify, Auth, $firebaseObject){
  // var param = '-K82b6x8j9uXqIclfUel';
  // var FIREBASE = new Firebase('https://on-belay.firebaseio.com/' + param);

  // var conversations = $firebaseObject(FIREBASE);

  // conversations.$bindTo($scope, 'data');

  $scope.activeClimbers = [];
  $scope.status = false;

  $scope.getActiveClimbers = function(){
    Climbers.getClimbers()
      .then(function(res) {
        $scope.activeClimbers = res;
      })
      .catch(function(err) {
        console.error(err);
      });
  }();

  $scope.getStatus = function() {
    Climbers.getStatus().then(function(res) {
      $scope.status = res.status;
    });
  }();

  $scope.updateStatus = function() {
    Climbers.updateStatus().then(function(res) {
      console.log(res);
    });
  };

  $scope.climbOn = function(climber) {
    Notify.sendNotification(climber)
      .then(function(res) {
        console.log(res);
      })
      .catch(function(err) {
        console.error(err);
      });
  };
  //Testing, delete later
  $scope.contactMe = function(id) {
  var param = $rootScope.loggedInID + '-' + id;
  var conversations = new Firebase('https://on-belay.firebaseio.com/' + param);

  var cons = $firebaseObject(conversations);

  cons.$bindTo($scope, 'data');

  conversations.push(
    { wasRead: false,
        users: { sender: 'Delphine', recipient: 'Sean' },
        text: 'Octopus'
    }
  );
/*
      { wasRead: false,
        users: { sender: 'Delphine', recipient: 'Santosh' },
        text: 'Starfish'
      }*/
  };

});

angular.module('nova.notifications', [])

  .controller('NotificationCtrl', function($scope, Notify, Climbers) {
    $scope.notifications = [];


    /*$scope.getAllNotifications = function() {
      Notify.fetchAllNotifications()
        .then(function(res) {
          $scope.notifications = res;
        })
        .catch(function(err) {
          console.error(err);
        });
    }();

    $scope.readAllNotifications = function() {
      Notify.markAllNotificationsRead()
        .then(function(res) {
          console.log(res);
        })
        .catch(function(err) {
          console.error(err);
        });
    }();*/

    $scope.climbOn = function(climber) {
      Notify.replyToClimber(climber)
        .then(function(res) {
          console.log(res);
          // Turn flags off for both users
          Climbers.updateStatus(climber)
            .then(function(res) {
              console.log(res);
            })
            .catch(function(err) {
              console.error(err);
            });
        })
        .catch(function(err) {
          console.error(err);
        });
    };

  });

angular.module('nova.update', [])

.controller('UpdateController', function($scope, $state, Update){
  $scope.user = { name: {first: '', last: ''} };
  $scope.update = function(){
    Update.update($scope.user)
    .then(function (res) {
        $state.go('main');
      })
      .catch(function (error) {
        console.error(error);
      });
  };
});

angular.module('nova', [
  'nova.auth',
  'nova.services',
  'ui.router',
  'nova.main',
  'nova.update',
  'nova.notifications',
  'firebase'
])

.config(function($stateProvider, $urlRouterProvider, $httpProvider){
  $urlRouterProvider.otherwise("/signin");
  $stateProvider
    .state('main', {
      url: "/main",
      templateUrl: "app/main/main.html",
      controller: "MainController"
    })
    .state('signin', {
      url: "/signin",
      templateUrl: "app/auth/signin.html",
      controller: "AuthController"
    })
    .state('signup', {
      url: "/signup",
      templateUrl: "app/auth/signup.html",
      controller: "AuthController"
    })
    .state('update', {
      url: "/update",
      templateUrl: "app/update/update.html",
      controller: "UpdateController"
    })
    .state('logout', {
      url: "/logout",
      controller: function($scope, Auth){
        Auth.signout();
      }
    })
    .state('notifications', {
      url: "/notifications",
      templateUrl: "app/notifications/notifications.html",
      controller: "NotificationCtrl"
    });

    $httpProvider.interceptors.push('AttachTokens');
})

.factory('AttachTokens', function($window){
  var attach = {
    request: function(object) {
      var jwt = $window.localStorage.getItem('com.nova');
      if (jwt) {
        object.headers['x-access-token'] = jwt;
      }
      object.headers['Allow-Control-Allow-Origin'] = '*';
      return object;
    }
  };
  return attach;
})

.run(function($rootScope, $state, Auth) {
  $rootScope.$on('$stateChangeStart', function(evt, toState, toParams, fromState, fromParams){
    if (toState.name === 'signin') {
      return;
    }
    if (!Auth.isAuth() && toState.name !== 'signup'){
      evt.preventDefault();
      $state.go('signin');
    }
  });
});

angular.module('nova.auth', [])

.controller('AuthController', function ($scope, $rootScope, $window, $state, Auth, Notify) {
  $scope.user = {};
  $rootScope.unread = $rootScope.unread || 0;

  if (Auth.isAuth()) {
    $rootScope.hasAuth = true;
  }

  $scope.signin = function () {
    Auth.signin($scope.user)
      .then(function (token) {
        $window.localStorage.setItem('com.nova', token);
        $rootScope.hasAuth = true;
        $state.go('main');
        // $scope.checkNotifications();
      })
      .catch(function (error) {
        console.error(error);
      });
  };

  $scope.signup = function () {
    Auth.signup($scope.user)
      .then(function (token) {
        $window.localStorage.setItem('com.nova', token);
        $rootScope.hasAuth = true;
        $state.go('update');
      })
      .catch(function (error) {
        console.error(error);
      });
  };

  $scope.checkNotifications = function() {
    if ($rootScope.hasAuth && $state.name !== 'notifications') {
      Notify.checkNotifications().then(function(resp) {
        $rootScope.unread = resp || 0;
      });
    }
  };

  // $scope.checkNotifications();
});

angular.module('nova.main', [])

.controller('MainController', function($scope, $rootScope, Climbers, Notify, Auth, $firebaseObject){
  // var param = '-K82b6x8j9uXqIclfUel';
  // var FIREBASE = new Firebase('https://on-belay.firebaseio.com/' + param);

  // var conversations = $firebaseObject(FIREBASE);

  // conversations.$bindTo($scope, 'data');

  $scope.activeClimbers = [];
  $scope.status = false;

  $scope.getActiveClimbers = function(){
    Climbers.getClimbers()
      .then(function(res) {
        $scope.activeClimbers = res;
      })
      .catch(function(err) {
        console.error(err);
      });
  }();

  $scope.getStatus = function() {
    Climbers.getStatus().then(function(res) {
      $scope.status = res.status;
    });
  }();

  $scope.updateStatus = function() {
    Climbers.updateStatus().then(function(res) {
      console.log(res);
    });
  };

  $scope.climbOn = function(climber) {
    Notify.sendNotification(climber)
      .then(function(res) {
        console.log(res);
      })
      .catch(function(err) {
        console.error(err);
      });
  };
  //Testing, delete later
  $scope.contactMe = function(id) {
  var param = $rootScope.loggedInID + '-' + id;
  var conversations = new Firebase('https://on-belay.firebaseio.com/' + param);

  var cons = $firebaseObject(conversations);

  cons.$bindTo($scope, 'data');

  conversations.push(
    { wasRead: false,
        users: { sender: 'Delphine', recipient: 'Sean' },
        text: 'Octopus'
    }
  );
/*
      { wasRead: false,
        users: { sender: 'Delphine', recipient: 'Santosh' },
        text: 'Starfish'
      }*/
  };

});

angular.module('nova.notifications', [])

  .controller('NotificationCtrl', function($scope, Notify, Climbers) {
    $scope.notifications = [];


    /*$scope.getAllNotifications = function() {
      Notify.fetchAllNotifications()
        .then(function(res) {
          $scope.notifications = res;
        })
        .catch(function(err) {
          console.error(err);
        });
    }();

    $scope.readAllNotifications = function() {
      Notify.markAllNotificationsRead()
        .then(function(res) {
          console.log(res);
        })
        .catch(function(err) {
          console.error(err);
        });
    }();*/

    $scope.climbOn = function(climber) {
      Notify.replyToClimber(climber)
        .then(function(res) {
          console.log(res);
          // Turn flags off for both users
          Climbers.updateStatus(climber)
            .then(function(res) {
              console.log(res);
            })
            .catch(function(err) {
              console.error(err);
            });
        })
        .catch(function(err) {
          console.error(err);
        });
    };

  });

angular.module('nova.update', [])

.controller('UpdateController', function($scope, $state, Update){
  $scope.user = { name: {first: '', last: ''} };
  $scope.update = function(){
    Update.update($scope.user)
    .then(function (res) {
        $state.go('main');
      })
      .catch(function (error) {
        console.error(error);
      });
  };
});

angular.module('nova', [
  'nova.auth',
  'nova.services',
  'ui.router',
  'nova.main',
  'nova.update',
  'nova.notifications',
  'firebase'
])

.config(function($stateProvider, $urlRouterProvider, $httpProvider){
  $urlRouterProvider.otherwise("/signin");
  $stateProvider
    .state('main', {
      url: "/main",
      templateUrl: "app/main/main.html",
      controller: "MainController"
    })
    .state('signin', {
      url: "/signin",
      templateUrl: "app/auth/signin.html",
      controller: "AuthController"
    })
    .state('signup', {
      url: "/signup",
      templateUrl: "app/auth/signup.html",
      controller: "AuthController"
    })
    .state('update', {
      url: "/update",
      templateUrl: "app/update/update.html",
      controller: "UpdateController"
    })
    .state('logout', {
      url: "/logout",
      controller: function($scope, Auth){
        Auth.signout();
      }
    })
    .state('notifications', {
      url: "/notifications",
      templateUrl: "app/notifications/notifications.html",
      controller: "NotificationCtrl"
    });

    $httpProvider.interceptors.push('AttachTokens');
})

.factory('AttachTokens', function($window){
  var attach = {
    request: function(object) {
      var jwt = $window.localStorage.getItem('com.nova');
      if (jwt) {
        object.headers['x-access-token'] = jwt;
      }
      object.headers['Allow-Control-Allow-Origin'] = '*';
      return object;
    }
  };
  return attach;
})

.run(function($rootScope, $state, Auth) {
  $rootScope.$on('$stateChangeStart', function(evt, toState, toParams, fromState, fromParams){
    if (toState.name === 'signin') {
      return;
    }
    if (!Auth.isAuth() && toState.name !== 'signup'){
      evt.preventDefault();
      $state.go('signin');
    }
  });
});

angular.module('nova.auth', [])

.controller('AuthController', function ($scope, $rootScope, $window, $state, Auth, Notify) {
  $scope.user = {};
  $rootScope.unread = $rootScope.unread || 0;

  if (Auth.isAuth()) {
    $rootScope.hasAuth = true;
  }

  $scope.signin = function () {
    Auth.signin($scope.user)
      .then(function (token) {
        $window.localStorage.setItem('com.nova', token);
        $rootScope.hasAuth = true;
        $state.go('main');
        // $scope.checkNotifications();
      })
      .catch(function (error) {
        console.error(error);
      });
  };

  $scope.signup = function () {
    Auth.signup($scope.user)
      .then(function (token) {
        $window.localStorage.setItem('com.nova', token);
        $rootScope.hasAuth = true;
        $state.go('update');
      })
      .catch(function (error) {
        console.error(error);
      });
  };

  $scope.checkNotifications = function() {
    if ($rootScope.hasAuth && $state.name !== 'notifications') {
      Notify.checkNotifications().then(function(resp) {
        $rootScope.unread = resp || 0;
      });
    }
  };

  // $scope.checkNotifications();
});

angular.module('nova.main', [])

.controller('MainController', function($scope, $rootScope, Climbers, Notify, Auth, $firebaseObject){
  // var param = '-K82b6x8j9uXqIclfUel';
  // var FIREBASE = new Firebase('https://on-belay.firebaseio.com/' + param);

  // var conversations = $firebaseObject(FIREBASE);

  // conversations.$bindTo($scope, 'data');

  $scope.activeClimbers = [];
  $scope.status = false;

  $scope.getActiveClimbers = function(){
    Climbers.getClimbers()
      .then(function(res) {
        $scope.activeClimbers = res;
      })
      .catch(function(err) {
        console.error(err);
      });
  }();

  $scope.getStatus = function() {
    Climbers.getStatus().then(function(res) {
      $scope.status = res.status;
    });
  }();

  $scope.updateStatus = function() {
    Climbers.updateStatus().then(function(res) {
      console.log(res);
    });
  };

  $scope.climbOn = function(climber) {
    Notify.sendNotification(climber)
      .then(function(res) {
        console.log(res);
      })
      .catch(function(err) {
        console.error(err);
      });
  };
  //Testing, delete later
  $scope.contactMe = function(id) {
  var param = $rootScope.loggedInID + '-' + id;
  var conversations = new Firebase('https://on-belay.firebaseio.com/' + param);

  var cons = $firebaseObject(conversations);

  cons.$bindTo($scope, 'data');

  conversations.push(
    { wasRead: false,
        users: { sender: 'Delphine', recipient: 'Sean' },
        text: 'Octopus'
    }
  );
/*
      { wasRead: false,
        users: { sender: 'Delphine', recipient: 'Santosh' },
        text: 'Starfish'
      }*/
  };

});

angular.module('nova.notifications', [])

  .controller('NotificationCtrl', function($scope, Notify, Climbers) {
    $scope.notifications = [];


    /*$scope.getAllNotifications = function() {
      Notify.fetchAllNotifications()
        .then(function(res) {
          $scope.notifications = res;
        })
        .catch(function(err) {
          console.error(err);
        });
    }();

    $scope.readAllNotifications = function() {
      Notify.markAllNotificationsRead()
        .then(function(res) {
          console.log(res);
        })
        .catch(function(err) {
          console.error(err);
        });
    }();*/

    $scope.climbOn = function(climber) {
      Notify.replyToClimber(climber)
        .then(function(res) {
          console.log(res);
          // Turn flags off for both users
          Climbers.updateStatus(climber)
            .then(function(res) {
              console.log(res);
            })
            .catch(function(err) {
              console.error(err);
            });
        })
        .catch(function(err) {
          console.error(err);
        });
    };

  });

angular.module('nova.update', [])

.controller('UpdateController', function($scope, $state, Update){
  $scope.user = { name: {first: '', last: ''} };
  $scope.update = function(){
    Update.update($scope.user)
    .then(function (res) {
        $state.go('main');
      })
      .catch(function (error) {
        console.error(error);
      });
  };
});

angular.module('nova', [
  'nova.auth',
  'nova.services',
  'ui.router',
  'nova.main',
  'nova.update',
  'nova.notifications',
  'firebase'
])

.config(function($stateProvider, $urlRouterProvider, $httpProvider){
  $urlRouterProvider.otherwise("/signin");
  $stateProvider
    .state('main', {
      url: "/main",
      templateUrl: "app/main/main.html",
      controller: "MainController"
    })
    .state('signin', {
      url: "/signin",
      templateUrl: "app/auth/signin.html",
      controller: "AuthController"
    })
    .state('signup', {
      url: "/signup",
      templateUrl: "app/auth/signup.html",
      controller: "AuthController"
    })
    .state('update', {
      url: "/update",
      templateUrl: "app/update/update.html",
      controller: "UpdateController"
    })
    .state('logout', {
      url: "/logout",
      controller: function($scope, Auth){
        Auth.signout();
      }
    })
    .state('notifications', {
      url: "/notifications",
      templateUrl: "app/notifications/notifications.html",
      controller: "NotificationCtrl"
    });

    $httpProvider.interceptors.push('AttachTokens');
})

.factory('AttachTokens', function($window){
  var attach = {
    request: function(object) {
      var jwt = $window.localStorage.getItem('com.nova');
      if (jwt) {
        object.headers['x-access-token'] = jwt;
      }
      object.headers['Allow-Control-Allow-Origin'] = '*';
      return object;
    }
  };
  return attach;
})

.run(function($rootScope, $state, Auth) {
  $rootScope.$on('$stateChangeStart', function(evt, toState, toParams, fromState, fromParams){
    if (toState.name === 'signin') {
      return;
    }
    if (!Auth.isAuth() && toState.name !== 'signup'){
      evt.preventDefault();
      $state.go('signin');
    }
  });
});

angular.module('nova.auth', [])

.controller('AuthController', function ($scope, $rootScope, $window, $state, Auth, Notify) {
  $scope.user = {};
  $rootScope.unread = $rootScope.unread || 0;

  if (Auth.isAuth()) {
    $rootScope.hasAuth = true;
  }

  $scope.signin = function () {
    Auth.signin($scope.user)
      .then(function (token) {
        $window.localStorage.setItem('com.nova', token);
        $rootScope.hasAuth = true;
        $state.go('main');
        // $scope.checkNotifications();
      })
      .catch(function (error) {
        console.error(error);
      });
  };

  $scope.signup = function () {
    Auth.signup($scope.user)
      .then(function (token) {
        $window.localStorage.setItem('com.nova', token);
        $rootScope.hasAuth = true;
        $state.go('update');
      })
      .catch(function (error) {
        console.error(error);
      });
  };

  $scope.checkNotifications = function() {
    if ($rootScope.hasAuth && $state.name !== 'notifications') {
      Notify.checkNotifications().then(function(resp) {
        $rootScope.unread = resp || 0;
      });
    }
  };

  // $scope.checkNotifications();
});

angular.module('nova.main', [])

.controller('MainController', function($scope, $rootScope, Climbers, Notify, Auth, $firebaseObject){
  // var param = '-K82b6x8j9uXqIclfUel';
  // var FIREBASE = new Firebase('https://on-belay.firebaseio.com/' + param);

  // var conversations = $firebaseObject(FIREBASE);

  // conversations.$bindTo($scope, 'data');

  $scope.activeClimbers = [];
  $scope.status = false;

  $scope.getActiveClimbers = function(){
    Climbers.getClimbers()
      .then(function(res) {
        $scope.activeClimbers = res;
      })
      .catch(function(err) {
        console.error(err);
      });
  }();

  $scope.getStatus = function() {
    Climbers.getStatus().then(function(res) {
      $scope.status = res.status;
    });
  }();

  $scope.updateStatus = function() {
    Climbers.updateStatus().then(function(res) {
      console.log(res);
    });
  };

  $scope.climbOn = function(climber) {
    Notify.sendNotification(climber)
      .then(function(res) {
        console.log(res);
      })
      .catch(function(err) {
        console.error(err);
      });
  };
  //Testing, delete later
  $scope.contactMe = function(id) {
  var param = $rootScope.loggedInID + '-' + id;
  var conversations = new Firebase('https://on-belay.firebaseio.com/' + param);

  var cons = $firebaseObject(conversations);

  cons.$bindTo($scope, 'data');

  conversations.push(
    { wasRead: false,
        users: { sender: 'Delphine', recipient: 'Sean' },
        text: 'Octopus'
    }
  );
/*
      { wasRead: false,
        users: { sender: 'Delphine', recipient: 'Santosh' },
        text: 'Starfish'
      }*/
  };

});

angular.module('nova.notifications', [])

  .controller('NotificationCtrl', function($scope, Notify, Climbers) {
    $scope.notifications = [];


    /*$scope.getAllNotifications = function() {
      Notify.fetchAllNotifications()
        .then(function(res) {
          $scope.notifications = res;
        })
        .catch(function(err) {
          console.error(err);
        });
    }();

    $scope.readAllNotifications = function() {
      Notify.markAllNotificationsRead()
        .then(function(res) {
          console.log(res);
        })
        .catch(function(err) {
          console.error(err);
        });
    }();*/

    $scope.climbOn = function(climber) {
      Notify.replyToClimber(climber)
        .then(function(res) {
          console.log(res);
          // Turn flags off for both users
          Climbers.updateStatus(climber)
            .then(function(res) {
              console.log(res);
            })
            .catch(function(err) {
              console.error(err);
            });
        })
        .catch(function(err) {
          console.error(err);
        });
    };

  });

angular.module('nova.update', [])

.controller('UpdateController', function($scope, $state, Update){
  $scope.user = { name: {first: '', last: ''} };
  $scope.update = function(){
    Update.update($scope.user)
    .then(function (res) {
        $state.go('main');
      })
      .catch(function (error) {
        console.error(error);
      });
  };
});

angular.module('nova.services', [])

.factory('Auth', function($http, $rootScope, $state, $window){

  var signin = function(user){
    return $http({
      method: 'POST',
      url: '/api/signin',
      data: user
    })
    .then(function(resp){
      console.log(resp);
      $rootScope.loggedInID = resp.data.loggedInID;
      return resp.data.token;
    });
  };

  var signup = function(user){
    return $http({
      method: 'POST',
      url: '/api/signup',
      data: user
    })
    .then(function(resp){
      return resp.data.token;
    })
    .catch(function(err) {
      $state.go('signup');
    });
  };

  var signout = function(){
    $rootScope.hasAuth = false;
    $window.localStorage.removeItem('com.nova');
    $state.go('signin');
  };

  var isAuth = function(){
    return !!$window.localStorage.getItem('com.nova');
  };

  return {
    signin: signin,
    signup: signup,
    signout: signout,
    isAuth: isAuth
  };
})

.factory('Climbers', function($http){

  var getClimbers = function(){
    return $http({
      method: 'GET',
      url: "/api/auth/user/climbers"
    }).then(function(res){
      return res.data;
    });
  };

  var getStatus = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/flag'
    }).then(function(resp) {
      return resp.data;
    });
  };

  var updateStatus = function(climber) {
    climber = climber || false;
    return $http({
      method: 'PUT',
      url: '/api/auth/user/flag',
      data: {from: climber}
    }).then(function(resp) {
      return resp.data;
    });

  };

  return {
    getStatus: getStatus,
    updateStatus: updateStatus,
    getClimbers: getClimbers
  };

})

.factory('Update', function($http){
  var update = function(user){
    return $http.put('/api/auth/user/update', user)
    .then(function(response){
      return response.data;
    })
    .catch(function(err){
      console.error(err);
    });
  };

  return {
    update: update
  };

})

.factory('Notify', function($http, $rootScope) {

  var sendNotification = function(climber) {
    return $http({
      method: 'POST',
      url: '/api/auth/user/notifications/create',
      data: {targetUser: climber}
    }).then(function(res) {
      return res.data;
    });
  };

  var checkNotifications = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/notifications/unread'
    }).then(function(resp) {
      return resp.data;
    });
  };

  var fetchAllNotifications = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/notifications/incoming'
    }).then(function(res) {
      return res.data;
    });
  };

  var markAllNotificationsRead = function() {
    return $http({
      method: 'PUT',
      url: '/api/auth/user/notifications/read'
    }).then(function(resp) {
      console.log(resp.data);
      $rootScope.unread = 0;
      return resp.data;
    });
  };

  var replyToClimber = function(climber) {
    return $http({
      method: 'PUT',
      url: '/api/auth/user/notifications/reply',
      data: {
        notificationId: climber.id,
        reply: true
      }
    }).then(function(res) {
      return res.data;
    });
  };

  return {
    sendNotification: sendNotification,
    checkNotifications: checkNotifications,
    fetchAllNotifications: fetchAllNotifications,
    markAllNotificationsRead: markAllNotificationsRead,
    replyToClimber: replyToClimber
  };

});

angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}});
angular.module('nova.services', [])

.factory('Auth', function($http, $rootScope, $state, $window){

  var signin = function(user){
    return $http({
      method: 'POST',
      url: '/api/signin',
      data: user
    })
    .then(function(resp){
      console.log(resp);
      $rootScope.loggedInID = resp.data.loggedInID;
      return resp.data.token;
    });
  };

  var signup = function(user){
    return $http({
      method: 'POST',
      url: '/api/signup',
      data: user
    })
    .then(function(resp){
      return resp.data.token;
    })
    .catch(function(err) {
      $state.go('signup');
    });
  };

  var signout = function(){
    $rootScope.hasAuth = false;
    $window.localStorage.removeItem('com.nova');
    $state.go('signin');
  };

  var isAuth = function(){
    return !!$window.localStorage.getItem('com.nova');
  };

  return {
    signin: signin,
    signup: signup,
    signout: signout,
    isAuth: isAuth
  };
})

.factory('Climbers', function($http){

  var getClimbers = function(){
    return $http({
      method: 'GET',
      url: "/api/auth/user/climbers"
    }).then(function(res){
      return res.data;
    });
  };

  var getStatus = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/flag'
    }).then(function(resp) {
      return resp.data;
    });
  };

  var updateStatus = function(climber) {
    climber = climber || false;
    return $http({
      method: 'PUT',
      url: '/api/auth/user/flag',
      data: {from: climber}
    }).then(function(resp) {
      return resp.data;
    });

  };

  return {
    getStatus: getStatus,
    updateStatus: updateStatus,
    getClimbers: getClimbers
  };

})

.factory('Update', function($http){
  var update = function(user){
    return $http.put('/api/auth/user/update', user)
    .then(function(response){
      return response.data;
    })
    .catch(function(err){
      console.error(err);
    });
  };

  return {
    update: update
  };

})

.factory('Notify', function($http, $rootScope) {

  var sendNotification = function(climber) {
    return $http({
      method: 'POST',
      url: '/api/auth/user/notifications/create',
      data: {targetUser: climber}
    }).then(function(res) {
      return res.data;
    });
  };

  var checkNotifications = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/notifications/unread'
    }).then(function(resp) {
      return resp.data;
    });
  };

  var fetchAllNotifications = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/notifications/incoming'
    }).then(function(res) {
      return res.data;
    });
  };

  var markAllNotificationsRead = function() {
    return $http({
      method: 'PUT',
      url: '/api/auth/user/notifications/read'
    }).then(function(resp) {
      console.log(resp.data);
      $rootScope.unread = 0;
      return resp.data;
    });
  };

  var replyToClimber = function(climber) {
    return $http({
      method: 'PUT',
      url: '/api/auth/user/notifications/reply',
      data: {
        notificationId: climber.id,
        reply: true
      }
    }).then(function(res) {
      return res.data;
    });
  };

  return {
    sendNotification: sendNotification,
    checkNotifications: checkNotifications,
    fetchAllNotifications: fetchAllNotifications,
    markAllNotificationsRead: markAllNotificationsRead,
    replyToClimber: replyToClimber
  };

});

angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}});
angular.module('nova.services', [])

.factory('Auth', function($http, $rootScope, $state, $window){

  var signin = function(user){
    return $http({
      method: 'POST',
      url: '/api/signin',
      data: user
    })
    .then(function(resp){
      console.log(resp);
      $rootScope.loggedInID = resp.data.loggedInID;
      return resp.data.token;
    });
  };

  var signup = function(user){
    return $http({
      method: 'POST',
      url: '/api/signup',
      data: user
    })
    .then(function(resp){
      return resp.data.token;
    })
    .catch(function(err) {
      $state.go('signup');
    });
  };

  var signout = function(){
    $rootScope.hasAuth = false;
    $window.localStorage.removeItem('com.nova');
    $state.go('signin');
  };

  var isAuth = function(){
    return !!$window.localStorage.getItem('com.nova');
  };

  return {
    signin: signin,
    signup: signup,
    signout: signout,
    isAuth: isAuth
  };
})

.factory('Climbers', function($http){

  var getClimbers = function(){
    return $http({
      method: 'GET',
      url: "/api/auth/user/climbers"
    }).then(function(res){
      return res.data;
    });
  };

  var getStatus = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/flag'
    }).then(function(resp) {
      return resp.data;
    });
  };

  var updateStatus = function(climber) {
    climber = climber || false;
    return $http({
      method: 'PUT',
      url: '/api/auth/user/flag',
      data: {from: climber}
    }).then(function(resp) {
      return resp.data;
    });

  };

  return {
    getStatus: getStatus,
    updateStatus: updateStatus,
    getClimbers: getClimbers
  };

})

.factory('Update', function($http){
  var update = function(user){
    return $http.put('/api/auth/user/update', user)
    .then(function(response){
      return response.data;
    })
    .catch(function(err){
      console.error(err);
    });
  };

  return {
    update: update
  };

})

.factory('Notify', function($http, $rootScope) {

  var sendNotification = function(climber) {
    return $http({
      method: 'POST',
      url: '/api/auth/user/notifications/create',
      data: {targetUser: climber}
    }).then(function(res) {
      return res.data;
    });
  };

  var checkNotifications = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/notifications/unread'
    }).then(function(resp) {
      return resp.data;
    });
  };

  var fetchAllNotifications = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/notifications/incoming'
    }).then(function(res) {
      return res.data;
    });
  };

  var markAllNotificationsRead = function() {
    return $http({
      method: 'PUT',
      url: '/api/auth/user/notifications/read'
    }).then(function(resp) {
      console.log(resp.data);
      $rootScope.unread = 0;
      return resp.data;
    });
  };

  var replyToClimber = function(climber) {
    return $http({
      method: 'PUT',
      url: '/api/auth/user/notifications/reply',
      data: {
        notificationId: climber.id,
        reply: true
      }
    }).then(function(res) {
      return res.data;
    });
  };

  return {
    sendNotification: sendNotification,
    checkNotifications: checkNotifications,
    fetchAllNotifications: fetchAllNotifications,
    markAllNotificationsRead: markAllNotificationsRead,
    replyToClimber: replyToClimber
  };

});

angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",
data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}});
angular.module('nova.services', [])

.factory('Auth', function($http, $rootScope, $state, $window){

  var signin = function(user){
    return $http({
      method: 'POST',
      url: '/api/signin',
      data: user
    })
    .then(function(resp){
      console.log(resp);
      $rootScope.loggedInID = resp.data.loggedInID;
      return resp.data.token;
    });
  };

  var signup = function(user){
    return $http({
      method: 'POST',
      url: '/api/signup',
      data: user
    })
    .then(function(resp){
      return resp.data.token;
    })
    .catch(function(err) {
      $state.go('signup');
    });
  };

  var signout = function(){
    $rootScope.hasAuth = false;
    $window.localStorage.removeItem('com.nova');
    $state.go('signin');
  };

  var isAuth = function(){
    return !!$window.localStorage.getItem('com.nova');
  };

  return {
    signin: signin,
    signup: signup,
    signout: signout,
    isAuth: isAuth
  };
})

.factory('Climbers', function($http){

  var getClimbers = function(){
    return $http({
      method: 'GET',
      url: "/api/auth/user/climbers"
    }).then(function(res){
      return res.data;
    });
  };

  var getStatus = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/flag'
    }).then(function(resp) {
      return resp.data;
    });
  };

  var updateStatus = function(climber) {
    climber = climber || false;
    return $http({
      method: 'PUT',
      url: '/api/auth/user/flag',
      data: {from: climber}
    }).then(function(resp) {
      return resp.data;
    });

  };

  return {
    getStatus: getStatus,
    updateStatus: updateStatus,
    getClimbers: getClimbers
  };

})

.factory('Update', function($http){
  var update = function(user){
    return $http.put('/api/auth/user/update', user)
    .then(function(response){
      return response.data;
    })
    .catch(function(err){
      console.error(err);
    });
  };

  return {
    update: update
  };

})

.factory('Notify', function($http, $rootScope) {

  var sendNotification = function(climber) {
    return $http({
      method: 'POST',
      url: '/api/auth/user/notifications/create',
      data: {targetUser: climber}
    }).then(function(res) {
      return res.data;
    });
  };

  var checkNotifications = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/notifications/unread'
    }).then(function(resp) {
      return resp.data;
    });
  };

  var fetchAllNotifications = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/notifications/incoming'
    }).then(function(res) {
      return res.data;
    });
  };

  var markAllNotificationsRead = function() {
    return $http({
      method: 'PUT',
      url: '/api/auth/user/notifications/read'
    }).then(function(resp) {
      console.log(resp.data);
      $rootScope.unread = 0;
      return resp.data;
    });
  };

  var replyToClimber = function(climber) {
    return $http({
      method: 'PUT',
      url: '/api/auth/user/notifications/reply',
      data: {
        notificationId: climber.id,
        reply: true
      }
    }).then(function(res) {
      return res.data;
    });
  };

  return {
    sendNotification: sendNotification,
    checkNotifications: checkNotifications,
    fetchAllNotifications: fetchAllNotifications,
    markAllNotificationsRead: markAllNotificationsRead,
    replyToClimber: replyToClimber
  };

});

angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,
a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{
url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}});
angular.module('nova.services', [])

.factory('Auth', function($http, $rootScope, $state, $window){

  var signin = function(user){
    return $http({
      method: 'POST',
      url: '/api/signin',
      data: user
    })
    .then(function(resp){
      console.log(resp);
      $rootScope.loggedInID = resp.data.loggedInID;
      return resp.data.token;
    });
  };

  var signup = function(user){
    return $http({
      method: 'POST',
      url: '/api/signup',
      data: user
    })
    .then(function(resp){
      return resp.data.token;
    })
    .catch(function(err) {
      $state.go('signup');
    });
  };

  var signout = function(){
    $rootScope.hasAuth = false;
    $window.localStorage.removeItem('com.nova');
    $state.go('signin');
  };

  var isAuth = function(){
    return !!$window.localStorage.getItem('com.nova');
  };

  return {
    signin: signin,
    signup: signup,
    signout: signout,
    isAuth: isAuth
  };
})

.factory('Climbers', function($http){

  var getClimbers = function(){
    return $http({
      method: 'GET',
      url: "/api/auth/user/climbers"
    }).then(function(res){
      return res.data;
    });
  };

  var getStatus = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/flag'
    }).then(function(resp) {
      return resp.data;
    });
  };

  var updateStatus = function(climber) {
    climber = climber || false;
    return $http({
      method: 'PUT',
      url: '/api/auth/user/flag',
      data: {from: climber}
    }).then(function(resp) {
      return resp.data;
    });

  };

  return {
    getStatus: getStatus,
    updateStatus: updateStatus,
    getClimbers: getClimbers
  };

})

.factory('Update', function($http){
  var update = function(user){
    return $http.put('/api/auth/user/update', user)
    .then(function(response){
      return response.data;
    })
    .catch(function(err){
      console.error(err);
    });
  };

  return {
    update: update
  };

})

.factory('Notify', function($http, $rootScope) {

  var sendNotification = function(climber) {
    return $http({
      method: 'POST',
      url: '/api/auth/user/notifications/create',
      data: {targetUser: climber}
    }).then(function(res) {
      return res.data;
    });
  };

  var checkNotifications = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/notifications/unread'
    }).then(function(resp) {
      return resp.data;
    });
  };

  var fetchAllNotifications = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/notifications/incoming'
    }).then(function(res) {
      return res.data;
    });
  };

  var markAllNotificationsRead = function() {
    return $http({
      method: 'PUT',
      url: '/api/auth/user/notifications/read'
    }).then(function(resp) {
      console.log(resp.data);
      $rootScope.unread = 0;
      return resp.data;
    });
  };

  var replyToClimber = function(climber) {
    return $http({
      method: 'PUT',
      url: '/api/auth/user/notifications/reply',
      data: {
        notificationId: climber.id,
        reply: true
      }
    }).then(function(res) {
      return res.data;
    });
  };

  return {
    sendNotification: sendNotification,
    checkNotifications: checkNotifications,
    fetchAllNotifications: fetchAllNotifications,
    markAllNotificationsRead: markAllNotificationsRead,
    replyToClimber: replyToClimber
  };

});

angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",
templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){
a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,
checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){
console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}});
angular.module('nova.services', [])

.factory('Auth', function($http, $rootScope, $state, $window){

  var signin = function(user){
    return $http({
      method: 'POST',
      url: '/api/signin',
      data: user
    })
    .then(function(resp){
      console.log(resp);
      $rootScope.loggedInID = resp.data.loggedInID;
      return resp.data.token;
    });
  };

  var signup = function(user){
    return $http({
      method: 'POST',
      url: '/api/signup',
      data: user
    })
    .then(function(resp){
      return resp.data.token;
    })
    .catch(function(err) {
      $state.go('signup');
    });
  };

  var signout = function(){
    $rootScope.hasAuth = false;
    $window.localStorage.removeItem('com.nova');
    $state.go('signin');
  };

  var isAuth = function(){
    return !!$window.localStorage.getItem('com.nova');
  };

  return {
    signin: signin,
    signup: signup,
    signout: signout,
    isAuth: isAuth
  };
})

.factory('Climbers', function($http){

  var getClimbers = function(){
    return $http({
      method: 'GET',
      url: "/api/auth/user/climbers"
    }).then(function(res){
      return res.data;
    });
  };

  var getStatus = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/flag'
    }).then(function(resp) {
      return resp.data;
    });
  };

  var updateStatus = function(climber) {
    climber = climber || false;
    return $http({
      method: 'PUT',
      url: '/api/auth/user/flag',
      data: {from: climber}
    }).then(function(resp) {
      return resp.data;
    });

  };

  return {
    getStatus: getStatus,
    updateStatus: updateStatus,
    getClimbers: getClimbers
  };

})

.factory('Update', function($http){
  var update = function(user){
    return $http.put('/api/auth/user/update', user)
    .then(function(response){
      return response.data;
    })
    .catch(function(err){
      console.error(err);
    });
  };

  return {
    update: update
  };

})

.factory('Notify', function($http, $rootScope) {

  var sendNotification = function(climber) {
    return $http({
      method: 'POST',
      url: '/api/auth/user/notifications/create',
      data: {targetUser: climber}
    }).then(function(res) {
      return res.data;
    });
  };

  var checkNotifications = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/notifications/unread'
    }).then(function(resp) {
      return resp.data;
    });
  };

  var fetchAllNotifications = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/notifications/incoming'
    }).then(function(res) {
      return res.data;
    });
  };

  var markAllNotificationsRead = function() {
    return $http({
      method: 'PUT',
      url: '/api/auth/user/notifications/read'
    }).then(function(resp) {
      console.log(resp.data);
      $rootScope.unread = 0;
      return resp.data;
    });
  };

  var replyToClimber = function(climber) {
    return $http({
      method: 'PUT',
      url: '/api/auth/user/notifications/reply',
      data: {
        notificationId: climber.id,
        reply: true
      }
    }).then(function(res) {
      return res.data;
    });
  };

  return {
    sendNotification: sendNotification,
    checkNotifications: checkNotifications,
    fetchAllNotifications: fetchAllNotifications,
    markAllNotificationsRead: markAllNotificationsRead,
    replyToClimber: replyToClimber
  };

});

angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){
d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){
a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,
a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){
var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{
url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",
data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){
a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){
console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){
return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}});
angular.module('nova.services', [])

.factory('Auth', function($http, $rootScope, $state, $window){

  var signin = function(user){
    return $http({
      method: 'POST',
      url: '/api/signin',
      data: user
    })
    .then(function(resp){
      console.log(resp);
      $rootScope.loggedInID = resp.data.loggedInID;
      return resp.data.token;
    });
  };

  var signup = function(user){
    return $http({
      method: 'POST',
      url: '/api/signup',
      data: user
    })
    .then(function(resp){
      return resp.data.token;
    })
    .catch(function(err) {
      $state.go('signup');
    });
  };

  var signout = function(){
    $rootScope.hasAuth = false;
    $window.localStorage.removeItem('com.nova');
    $state.go('signin');
  };

  var isAuth = function(){
    return !!$window.localStorage.getItem('com.nova');
  };

  return {
    signin: signin,
    signup: signup,
    signout: signout,
    isAuth: isAuth
  };
})

.factory('Climbers', function($http){

  var getClimbers = function(){
    return $http({
      method: 'GET',
      url: "/api/auth/user/climbers"
    }).then(function(res){
      return res.data;
    });
  };

  var getStatus = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/flag'
    }).then(function(resp) {
      return resp.data;
    });
  };

  var updateStatus = function(climber) {
    climber = climber || false;
    return $http({
      method: 'PUT',
      url: '/api/auth/user/flag',
      data: {from: climber}
    }).then(function(resp) {
      return resp.data;
    });

  };

  return {
    getStatus: getStatus,
    updateStatus: updateStatus,
    getClimbers: getClimbers
  };

})

.factory('Update', function($http){
  var update = function(user){
    return $http.put('/api/auth/user/update', user)
    .then(function(response){
      return response.data;
    })
    .catch(function(err){
      console.error(err);
    });
  };

  return {
    update: update
  };

})

.factory('Notify', function($http, $rootScope) {

  var sendNotification = function(climber) {
    return $http({
      method: 'POST',
      url: '/api/auth/user/notifications/create',
      data: {targetUser: climber}
    }).then(function(res) {
      return res.data;
    });
  };

  var checkNotifications = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/notifications/unread'
    }).then(function(resp) {
      return resp.data;
    });
  };

  var fetchAllNotifications = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/notifications/incoming'
    }).then(function(res) {
      return res.data;
    });
  };

  var markAllNotificationsRead = function() {
    return $http({
      method: 'PUT',
      url: '/api/auth/user/notifications/read'
    }).then(function(resp) {
      console.log(resp.data);
      $rootScope.unread = 0;
      return resp.data;
    });
  };

  var replyToClimber = function(climber) {
    return $http({
      method: 'PUT',
      url: '/api/auth/user/notifications/reply',
      data: {
        notificationId: climber.id,
        reply: true
      }
    }).then(function(res) {
      return res.data;
    });
  };

  return {
    sendNotification: sendNotification,
    checkNotifications: checkNotifications,
    fetchAllNotifications: fetchAllNotifications,
    markAllNotificationsRead: markAllNotificationsRead,
    replyToClimber: replyToClimber
  };

});

angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){
d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",
url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){
return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),
b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){
b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){
var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",
data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova");
};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){
a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);
g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],
a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,
fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",
templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){
return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main");
})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",
controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",
url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){
return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,
e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova",["nova.auth","nova.services","ui.router","nova.main","nova.update","nova.notifications","firebase"]).config(function(a,b,c){b.otherwise("/signin"),a.state("main",{url:"/main",templateUrl:"app/main/main.html",controller:"MainController"}).state("signin",{url:"/signin",templateUrl:"app/auth/signin.html",controller:"AuthController"}).state("signup",{url:"/signup",templateUrl:"app/auth/signup.html",controller:"AuthController"}).state("update",{url:"/update",templateUrl:"app/update/update.html",controller:"UpdateController"}).state("logout",{url:"/logout",controller:function(a,b){b.signout()}}).state("notifications",{url:"/notifications",templateUrl:"app/notifications/notifications.html",controller:"NotificationCtrl"}),c.interceptors.push("AttachTokens")}).factory("AttachTokens",function(a){var b={request:function(b){var c=a.localStorage.getItem("com.nova");return c&&(b.headers["x-access-token"]=c),b.headers["Allow-Control-Allow-Origin"]="*",b}};return b}).run(function(a,b,c){a.$on("$stateChangeStart",function(a,d,e,f,g){"signin"!==d.name&&(c.isAuth()||"signup"===d.name||(a.preventDefault(),b.go("signin")))})}),angular.module("nova.auth",[]).controller("AuthController",function(a,b,c,d,e,f){a.user={},b.unread=b.unread||0,e.isAuth()&&(b.hasAuth=!0),a.signin=function(){e.signin(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("main")})["catch"](function(a){console.error(a)})},a.signup=function(){e.signup(a.user).then(function(a){c.localStorage.setItem("com.nova",a),b.hasAuth=!0,d.go("update")})["catch"](function(a){console.error(a)})},a.checkNotifications=function(){b.hasAuth&&"notifications"!==d.name&&f.checkNotifications().then(function(a){b.unread=a||0})}}),angular.module("nova.main",[]).controller("MainController",function(a,b,c,d,e,f){a.activeClimbers=[],a.status=!1,a.getActiveClimbers=function(){c.getClimbers().then(function(b){a.activeClimbers=b})["catch"](function(a){console.error(a)})}(),a.getStatus=function(){c.getStatus().then(function(b){a.status=b.status})}(),a.updateStatus=function(){c.updateStatus().then(function(a){console.log(a)})},a.climbOn=function(a){d.sendNotification(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})},a.contactMe=function(c){var d=b.loggedInID+"-"+c,e=new Firebase("https://on-belay.firebaseio.com/"+d),g=f(e);g.$bindTo(a,"data"),e.push({wasRead:!1,users:{sender:"Delphine",recipient:"Sean"},text:"Octopus"})}}),angular.module("nova.notifications",[]).controller("NotificationCtrl",function(a,b,c){a.notifications=[],a.climbOn=function(a){b.replyToClimber(a).then(function(b){console.log(b),c.updateStatus(a).then(function(a){console.log(a)})["catch"](function(a){console.error(a)})})["catch"](function(a){console.error(a)})}}),angular.module("nova.update",[]).controller("UpdateController",function(a,b,c){a.user={name:{first:"",last:""}},a.update=function(){c.update(a.user).then(function(a){b.go("main")})["catch"](function(a){console.error(a)})}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}}),angular.module("nova.services",[]).factory("Auth",function(a,b,c,d){var e=function(c){return a({method:"POST",url:"/api/signin",data:c}).then(function(a){return console.log(a),b.loggedInID=a.data.loggedInID,a.data.token})},f=function(b){return a({method:"POST",url:"/api/signup",data:b}).then(function(a){return a.data.token})["catch"](function(a){c.go("signup")})},g=function(){b.hasAuth=!1,d.localStorage.removeItem("com.nova"),c.go("signin")},h=function(){return!!d.localStorage.getItem("com.nova")};return{signin:e,signup:f,signout:g,isAuth:h}}).factory("Climbers",function(a){var b=function(){return a({method:"GET",url:"/api/auth/user/climbers"}).then(function(a){return a.data})},c=function(){return a({method:"GET",url:"/api/auth/user/flag"}).then(function(a){return a.data})},d=function(b){return b=b||!1,a({method:"PUT",url:"/api/auth/user/flag",data:{from:b}}).then(function(a){return a.data})};return{getStatus:c,updateStatus:d,getClimbers:b}}).factory("Update",function(a){var b=function(b){return a.put("/api/auth/user/update",b).then(function(a){return a.data})["catch"](function(a){console.error(a)})};return{update:b}}).factory("Notify",function(a,b){var c=function(b){return a({method:"POST",url:"/api/auth/user/notifications/create",data:{targetUser:b}}).then(function(a){return a.data})},d=function(){return a({method:"GET",url:"/api/auth/user/notifications/unread"}).then(function(a){return a.data})},e=function(){return a({method:"GET",url:"/api/auth/user/notifications/incoming"}).then(function(a){return a.data})},f=function(){return a({method:"PUT",url:"/api/auth/user/notifications/read"}).then(function(a){return console.log(a.data),b.unread=0,a.data})},g=function(b){return a({method:"PUT",url:"/api/auth/user/notifications/reply",data:{notificationId:b.id,reply:!0}}).then(function(a){return a.data})};return{sendNotification:c,checkNotifications:d,fetchAllNotifications:e,markAllNotificationsRead:f,replyToClimber:g}});
angular.module('nova.services', [])

.factory('Auth', function($http, $rootScope, $state, $window){

  var signin = function(user){
    return $http({
      method: 'POST',
      url: '/api/signin',
      data: user
    })
    .then(function(resp){
      console.log(resp);
      $rootScope.loggedInID = resp.data.loggedInID;
      return resp.data.token;
    });
  };

  var signup = function(user){
    return $http({
      method: 'POST',
      url: '/api/signup',
      data: user
    })
    .then(function(resp){
      return resp.data.token;
    })
    .catch(function(err) {
      $state.go('signup');
    });
  };

  var signout = function(){
    $rootScope.hasAuth = false;
    $window.localStorage.removeItem('com.nova');
    $state.go('signin');
  };

  var isAuth = function(){
    return !!$window.localStorage.getItem('com.nova');
  };

  return {
    signin: signin,
    signup: signup,
    signout: signout,
    isAuth: isAuth
  };
})

.factory('Climbers', function($http){

  var getClimbers = function(){
    return $http({
      method: 'GET',
      url: "/api/auth/user/climbers"
    }).then(function(res){
      return res.data;
    });
  };

  var getStatus = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/flag'
    }).then(function(resp) {
      return resp.data;
    });
  };

  var updateStatus = function(climber) {
    climber = climber || false;
    return $http({
      method: 'PUT',
      url: '/api/auth/user/flag',
      data: {from: climber}
    }).then(function(resp) {
      return resp.data;
    });

  };

  return {
    getStatus: getStatus,
    updateStatus: updateStatus,
    getClimbers: getClimbers
  };

})

.factory('Update', function($http){
  var update = function(user){
    return $http.put('/api/auth/user/update', user)
    .then(function(response){
      return response.data;
    })
    .catch(function(err){
      console.error(err);
    });
  };

  return {
    update: update
  };

})

.factory('Notify', function($http, $rootScope) {

  var sendNotification = function(climber) {
    return $http({
      method: 'POST',
      url: '/api/auth/user/notifications/create',
      data: {targetUser: climber}
    }).then(function(res) {
      return res.data;
    });
  };

  var checkNotifications = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/notifications/unread'
    }).then(function(resp) {
      return resp.data;
    });
  };

  var fetchAllNotifications = function() {
    return $http({
      method: 'GET',
      url: '/api/auth/user/notifications/incoming'
    }).then(function(res) {
      return res.data;
    });
  };

  var markAllNotificationsRead = function() {
    return $http({
      method: 'PUT',
      url: '/api/auth/user/notifications/read'
    }).then(function(resp) {
      console.log(resp.data);
      $rootScope.unread = 0;
      return resp.data;
    });
  };

  var replyToClimber = function(climber) {
    return $http({
      method: 'PUT',
      url: '/api/auth/user/notifications/reply',
      data: {
        notificationId: climber.id,
        reply: true
      }
    }).then(function(res) {
      return res.data;
    });
  };

  return {
    sendNotification: sendNotification,
    checkNotifications: checkNotifications,
    fetchAllNotifications: fetchAllNotifications,
    markAllNotificationsRead: markAllNotificationsRead,
    replyToClimber: replyToClimber
  };

});
